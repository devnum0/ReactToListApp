{"ast":null,"code":"var _jsxFileName = \"/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-form/TodoForm.jsx\";\nimport React, { Component } from 'react';\nexport default class TodoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveTodo = () => {\n      const _this$state = this.state,\n            name = _this$state.name,\n            description = _this$state.description,\n            status = _this$state.status;\n      fetch('http://localhost:4000/add', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n          name: name,\n          description: description,\n          status: status\n        })\n      }).then(response => response.json()).then(todo => {\n        console.log(todo);\n\n        if (todo) {\n          console.log(\"here\");\n          return todo;\n        } else {\n          return;\n        }\n      });\n    };\n\n    this.onNameChange = event => {\n      event.preventDefault();\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.onStatusChange = event => {\n      event.preventDefault();\n      this.setState({\n        status: event.target.value\n      });\n    };\n\n    this.onDescriptionChange = event => {\n      event.preventDefault();\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      const _this$state2 = this.state,\n            name = _this$state2.name,\n            description = _this$state2.description,\n            status = _this$state2.status;\n      e.preventDefault();\n      const todo = this.saveTodo();\n      console.log(todo); // this.props.addTodo({\n      //     name:name,\n      //     description:description,\n      //     status:status\n      // });    \n\n      if (todo) {\n        this.props.addTodo(todo);\n      }\n\n      this.setState({\n        name: '',\n        description: ''\n      });\n    };\n\n    this.nameInput = React.createRef();\n    this.descriptionInput = React.createRef();\n    this.statusInput = React.createRef();\n    this.state = {\n      name: '',\n      description: '',\n      status: '',\n      id: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Todo Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.onNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Todo Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.description,\n      onChange: this.onDescriptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"create todo\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-form/TodoForm.jsx"],"names":["React","Component","TodoForm","constructor","props","saveTodo","state","name","description","status","fetch","method","headers","body","JSON","stringify","then","response","json","todo","console","log","onNameChange","event","preventDefault","setState","target","value","onStatusChange","onDescriptionChange","handleSubmit","e","addTodo","nameInput","createRef","descriptionInput","statusInput","id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class TodoForm extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.nameInput = React.createRef();\n        this.descriptionInput = React.createRef();\n        this.statusInput = React.createRef();\n\n        this.state = {\n            name: '',\n            description: '',\n            status:'',\n            id: '',\n        }\n    }\n\n    saveTodo = () => {\n        const {name,description,status }= this.state;\n\n        fetch('http://localhost:4000/add', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'},\n            \n            body: JSON.stringify({\n                name:name,\n                description:description,\n                status:status\n            })\n          })\n          .then(response => response.json())\n          .then(todo => {\n              console.log(todo)\n              if(todo){\n                console.log(\"here\")\n                return todo;\n              }      \n              else{\n               return;\n              }\n          })\n\n    }\n\n    onNameChange = (event) => {\n        event.preventDefault();\n        this.setState({name: event.target.value});\n      }\n      onStatusChange = (event) => {\n        event.preventDefault();\n        this.setState({status: event.target.value});\n      }\n      \n      onDescriptionChange = (event) => {\n        event.preventDefault();\n        this.setState({description: event.target.value});\n      }\n\n    handleSubmit = e => {\n        const {name,description,status }= this.state;\n        \n        e.preventDefault();\n\n        const todo = this.saveTodo();\n        console.log(todo)\n        // this.props.addTodo({\n        //     name:name,\n        //     description:description,\n        //     status:status\n        // });    \n        if(todo){\n            this.props.addTodo(todo);   \n        }\n\n        this.setState({name:'',description:''})\n\n      };\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit} >\n                    {/* <label>Todo Name</label>\n                    <input type=\"text\" ref={this.nameInput}/>\n                    <label>Todo Description</label>\n                    <input type=\"text\" ref={this.descriptionInput} />\n                    {/* <label>Todo Name</label>\n                    <input type=\"text\" ref={this.descriptionInput}/> */}\n\n                    <label>Todo Name</label>\n                    <input type=\"text\" value={this.state.name} onChange={this.onNameChange}/>\n                    <label>Todo Description</label>\n                    <input type=\"text\" value={this.state.description} onChange={this.onDescriptionChange} />\n                    <button onClick={this.handleSubmit}>create todo</button>\n                </form>           \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}