{"ast":null,"code":"var _jsxFileName = \"/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-form/TodoForm.jsx\";\nimport React, { Component } from 'react';\nexport default class TodoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadTodo = todo => {\n      this.setState({\n        name: todo.name,\n        description: todo.description,\n        status: todo.status\n      });\n    };\n\n    this.onNameChange = event => {\n      event.preventDefault();\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.onStatusChange = event => {\n      event.preventDefault();\n      this.setState({\n        status: event.target.value\n      });\n    };\n\n    this.onDescriptionChange = event => {\n      event.preventDefault();\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.saveTodo();\n      this.setState({\n        name: '',\n        description: ''\n      });\n    };\n\n    this.state = {\n      name: '',\n      description: '',\n      status: '',\n      id: ''\n    };\n  }\n\n  async saveTodo() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          description = _this$state.description,\n          status = _this$state.status;\n    fetch('http://localhost:4000/add', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        name: name,\n        description: description,\n        status: status\n      })\n    }).then(response => response.json()).then(todo => {\n      if (todo) {\n        this.props.addTodo({\n          name: todo.name,\n          description: todo.description,\n          status: todo.status,\n          id: todo._id\n        });\n      } else {\n        return;\n      }\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Todo Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.onNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Todo Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.description,\n      onChange: this.onDescriptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"create todo\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-form/TodoForm.jsx"],"names":["React","Component","TodoForm","constructor","props","loadTodo","todo","setState","name","description","status","onNameChange","event","preventDefault","target","value","onStatusChange","onDescriptionChange","handleSubmit","e","saveTodo","state","id","fetch","method","headers","body","JSON","stringify","then","response","json","addTodo","_id","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class TodoForm extends Component {\n\n    constructor(props){\n        super(props)\n\n   \n\n        this.state = {\n            name: '',\n            description: '',\n            status:'',\n            id: '',\n        }\n    }\n\n    loadTodo = (todo) => {\n        this.setState({\n                    name: todo.name,\n                    description: todo.description,\n                    status: todo.status\n                })\n    }\n\n    async saveTodo ()  {\n        const {name,description,status }= this.state;\n\n     fetch('http://localhost:4000/add', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'},\n            \n            body: JSON.stringify({\n                name:name,\n                description:description,\n                status:status\n            })\n          })\n          .then(response => response.json())\n          .then(todo => {\n              if(todo){\n                this.props.addTodo({\n                    name: todo.name,\n                    description: todo.description,\n                    status: todo.status,\n                    id: todo._id\n                })            \n              }      \n              else{\n               return;\n              }\n          }).catch(err => console.log(err))\n\n    }\n\n    onNameChange = (event) => {\n        event.preventDefault();\n        this.setState({name: event.target.value});\n      }\n      onStatusChange = (event) => {\n        event.preventDefault();\n        this.setState({status: event.target.value});\n      }\n      \n      onDescriptionChange = (event) => {\n        event.preventDefault();\n        this.setState({description: event.target.value});\n      }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.saveTodo();\n        this.setState({name:'',description:''})\n      };\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit} >\n                    <label>Todo Name</label>\n                    <input type=\"text\" value={this.state.name} onChange={this.onNameChange}/>\n                    <label>Todo Description</label>\n                    <input type=\"text\" value={this.state.description} onChange={this.onDescriptionChange} />\n                    <button onClick={this.handleSubmit}>create todo</button>\n                </form>           \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}