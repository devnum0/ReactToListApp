{"ast":null,"code":"var _jsxFileName = \"/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-form/TodoForm.jsx\";\nimport React, { Component } from 'react';\nconst url = \"http://localhost:4000/add\";\nexport default class TodoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onNameChange = event => {\n      event.preventDefault();\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.onStatusChange = event => {\n      event.preventDefault();\n      this.setState({\n        status: event.target.value\n      });\n    };\n\n    this.onDescriptionChange = event => {\n      event.preventDefault();\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.getTodo = () => {\n      return this.get(url).then(data => data);\n    };\n\n    this.saveTodo = () => {\n      // const {name,description,status }= this.state;\n      return this.getTodo;\n    };\n\n    this.handleSubmit = e => {\n      const _this$state = this.state,\n            name = _this$state.name,\n            description = _this$state.description,\n            status = _this$state.status;\n      e.preventDefault();\n      let todo = this.saveTodo();\n      console.log(todo);\n      this.props.addTodo({\n        name: name,\n        description: description,\n        status: status\n      }); // if(todo){\n      //  console.log(todo._id)   \n      //     this.props.addTodo(todo);   \n      // }\n\n      this.setState({\n        name: '',\n        description: ''\n      });\n    };\n\n    this.nameInput = React.createRef();\n    this.descriptionInput = React.createRef();\n    this.statusInput = React.createRef();\n    this.state = {\n      name: '',\n      description: '',\n      status: '',\n      id: ''\n    };\n  }\n\n  //    options = () => ({\n  //     method: 'post',\n  //     headers: {'Content-Type': 'application/json',\n  //     'Access-Control-Allow-Origin': '*'},\n  //     body: JSON.stringify({\n  //         name:name,\n  //         description:description,\n  //         status:status\n  //     })\n  //   });\n  get(url) {\n    return fetch(url, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        name: name,\n        description: description,\n        status: status\n      })\n    }).then(response => response.json());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Todo Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.onNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Todo Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.description,\n      onChange: this.onDescriptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"create todo\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-form/TodoForm.jsx"],"names":["React","Component","url","TodoForm","constructor","props","onNameChange","event","preventDefault","setState","name","target","value","onStatusChange","status","onDescriptionChange","description","getTodo","get","then","data","saveTodo","handleSubmit","e","state","todo","console","log","addTodo","nameInput","createRef","descriptionInput","statusInput","id","fetch","method","headers","body","JSON","stringify","response","json","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAMC,GAAG,GAAE,2BAAX;AAIA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE5CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAelBC,YAfkB,GAeFC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAApB,OAAd;AACD,KAlBe;;AAAA,SAmBhBC,cAnBgB,GAmBEN,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAACK,QAAAA,MAAM,EAAEP,KAAK,CAACI,MAAN,CAAaC;AAAtB,OAAd;AACD,KAtBe;;AAAA,SAwBhBG,mBAxBgB,GAwBOR,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAACO,QAAAA,WAAW,EAAET,KAAK,CAACI,MAAN,CAAaC;AAA3B,OAAd;AACD,KA3Be;;AAAA,SAuDhBK,OAvDgB,GAuDN,MAAM;AAEd,aAAO,KAAKC,GAAL,CAAShB,GAAT,EACNiB,IADM,CACDC,IAAI,IAAIA,IADP,CAAP;AAED,KA3De;;AAAA,SA4DlBC,QA5DkB,GA4DP,MAAM;AACb;AAEA,aAAO,KAAKJ,OAAZ;AACH,KAhEiB;;AAAA,SAmElBK,YAnEkB,GAmEHC,CAAC,IAAI;AAAA,0BACkB,KAAKC,KADvB;AAAA,YACTd,IADS,eACTA,IADS;AAAA,YACJM,WADI,eACJA,WADI;AAAA,YACQF,MADR,eACQA,MADR;AAGhBS,MAAAA,CAAC,CAACf,cAAF;AAEA,UAAIiB,IAAI,GAAI,KAAKJ,QAAL,EAAZ;AACCK,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,WAAKpB,KAAL,CAAWuB,OAAX,CAAmB;AACflB,QAAAA,IAAI,EAACA,IADU;AAEfM,QAAAA,WAAW,EAACA,WAFG;AAGfF,QAAAA,MAAM,EAACA;AAHQ,OAAnB,EAPgB,CAYhB;AACA;AACA;AACA;;AAEA,WAAKL,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAC,EAAN;AAASM,QAAAA,WAAW,EAAC;AAArB,OAAd;AAED,KAtFe;;AAGd,SAAKa,SAAL,GAAiB7B,KAAK,CAAC8B,SAAN,EAAjB;AACA,SAAKC,gBAAL,GAAwB/B,KAAK,CAAC8B,SAAN,EAAxB;AACA,SAAKE,WAAL,GAAmBhC,KAAK,CAAC8B,SAAN,EAAnB;AAEA,SAAKN,KAAL,GAAa;AACTd,MAAAA,IAAI,EAAE,EADG;AAETM,MAAAA,WAAW,EAAE,EAFJ;AAGTF,MAAAA,MAAM,EAAC,EAHE;AAITmB,MAAAA,EAAE,EAAE;AAJK,KAAb;AAMH;;AAgBD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACEf,EAAAA,GAAG,CAAChB,GAAD,EAAM;AACP,WAAOgC,KAAK,CAAChC,GAAD,EAAK;AACbiC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AAAC,wBAAgB,kBAAjB;AACT,uCAA+B;AADtB,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB7B,QAAAA,IAAI,EAACA,IADY;AAEjBM,QAAAA,WAAW,EAACA,WAFK;AAGjBF,QAAAA,MAAM,EAACA;AAHU,OAAf;AALO,KAAL,CAAL,CAWJK,IAXI,CAWCqB,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXb,CAAP;AAYD;;AAoCHC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKpB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ,EASI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWd,IAArC;AAA2C,MAAA,QAAQ,EAAE,KAAKJ,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVJ,EAWI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWR,WAArC;AAAkD,MAAA,QAAQ,EAAE,KAAKD,mBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAYI;AAAQ,MAAA,OAAO,EAAE,KAAKO,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZJ,CADJ,CADJ;AAkBH;;AA9G2C","sourcesContent":["import React, { Component } from 'react'\nconst url =\"http://localhost:4000/add\";\n\n\n\nexport default class TodoForm extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.nameInput = React.createRef();\n        this.descriptionInput = React.createRef();\n        this.statusInput = React.createRef();\n\n        this.state = {\n            name: '',\n            description: '',\n            status:'',\n            id: '',\n        }\n    }\n\n    onNameChange = (event) => {\n        event.preventDefault();\n        this.setState({name: event.target.value});\n      }\n      onStatusChange = (event) => {\n        event.preventDefault();\n        this.setState({status: event.target.value});\n      }\n      \n      onDescriptionChange = (event) => {\n        event.preventDefault();\n        this.setState({description: event.target.value});\n      }\n\n    //    options = () => ({\n    //     method: 'post',\n    //     headers: {'Content-Type': 'application/json',\n    //     'Access-Control-Allow-Origin': '*'},\n        \n    //     body: JSON.stringify({\n    //         name:name,\n    //         description:description,\n    //         status:status\n    //     })\n    //   });\n      get(url) {\n        return fetch(url,{\n            method: 'post',\n            headers: {'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'},\n            \n            body: JSON.stringify({\n                name:name,\n                description:description,\n                status:status\n            })\n          })\n          .then(response => response.json());\n      }\n\n      getTodo = () => {\n\n        return this.get(url)\n        .then(data => data);\n      }\n    saveTodo = () => {\n        // const {name,description,status }= this.state;\n    \n        return this.getTodo;\n    }\n\n\n    handleSubmit = e => {\n        const {name,description,status }= this.state;\n        \n        e.preventDefault();\n\n        let todo =  this.saveTodo();\n         console.log(todo)\n        this.props.addTodo({\n            name:name,\n            description:description,\n            status:status\n        });    \n        // if(todo){\n        //  console.log(todo._id)   \n        //     this.props.addTodo(todo);   \n        // }\n\n        this.setState({name:'',description:''})\n\n      };\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit} >\n                    {/* <label>Todo Name</label>\n                    <input type=\"text\" ref={this.nameInput}/>\n                    <label>Todo Description</label>\n                    <input type=\"text\" ref={this.descriptionInput} />\n                    {/* <label>Todo Name</label>\n                    <input type=\"text\" ref={this.descriptionInput}/> */}\n\n                    <label>Todo Name</label>\n                    <input type=\"text\" value={this.state.name} onChange={this.onNameChange}/>\n                    <label>Todo Description</label>\n                    <input type=\"text\" value={this.state.description} onChange={this.onDescriptionChange} />\n                    <button onClick={this.handleSubmit}>create todo</button>\n                </form>           \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}