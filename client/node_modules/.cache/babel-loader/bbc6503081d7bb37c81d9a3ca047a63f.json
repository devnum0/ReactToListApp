{"ast":null,"code":"var _jsxFileName = \"/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-form/TodoForm.jsx\";\nimport React, { Component } from 'react';\nexport default class TodoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onNameChange = event => {\n      event.preventDefault();\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.onStatusChange = event => {\n      event.preventDefault();\n      this.setState({\n        status: event.target.value\n      });\n    };\n\n    this.onDescriptionChange = event => {\n      event.preventDefault();\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      const _this$state = this.state,\n            name = _this$state.name,\n            description = _this$state.description,\n            status = _this$state.status;\n      e.preventDefault();\n      let todo = this.saveTodo();\n      console.log(todo); // this.props.addTodo({\n      //     name:name,\n      //     description:description,\n      //     status:status\n      // });    \n\n      if (todo) {\n        console.log(todo._id);\n        this.props.addTodo(todo);\n      }\n\n      this.setState({\n        name: '',\n        description: ''\n      });\n    };\n\n    this.nameInput = React.createRef();\n    this.descriptionInput = React.createRef();\n    this.statusInput = React.createRef();\n    this.state = {\n      name: '',\n      description: '',\n      status: '',\n      id: ''\n    };\n  }\n\n  async saveTodo() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          description = _this$state2.description,\n          status = _this$state2.status;\n    return await fetch('http://localhost:4000/add', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        name: name,\n        description: description,\n        status: status\n      })\n    }).then(response => response.json()).then(todo => {\n      if (todo) {\n        // this.setState({\n        //     name: todo.name,\n        //     description: todo.description,\n        //     status: todo.status\n        // })\n        return Object.assign({}, todo);\n      } else {\n        return;\n      }\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Todo Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.onNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Todo Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.description,\n      onChange: this.onDescriptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"create todo\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-form/TodoForm.jsx"],"names":["React","Component","TodoForm","constructor","props","onNameChange","event","preventDefault","setState","name","target","value","onStatusChange","status","onDescriptionChange","description","handleSubmit","e","state","todo","saveTodo","console","log","_id","addTodo","nameInput","createRef","descriptionInput","statusInput","id","fetch","method","headers","body","JSON","stringify","then","response","json","Object","assign","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class TodoForm extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.nameInput = React.createRef();\n        this.descriptionInput = React.createRef();\n        this.statusInput = React.createRef();\n\n        this.state = {\n            name: '',\n            description: '',\n            status:'',\n            id: '',\n        }\n    }\n\n  async  saveTodo () {\n        const {name,description,status }= this.state;\n\n   return  await fetch('http://localhost:4000/add', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'},\n            \n            body: JSON.stringify({\n                name:name,\n                description:description,\n                status:status\n            })\n          })\n          .then(response => response.json())\n          .then(todo => {\n              if(todo){\n               \n                // this.setState({\n                //     name: todo.name,\n                //     description: todo.description,\n                //     status: todo.status\n                // })\n                    return Object.assign({},todo);\n                \n              }      \n              else{\n               return;\n              }\n          }).catch(err => console.log(err))\n\n    }\n\n    onNameChange = (event) => {\n        event.preventDefault();\n        this.setState({name: event.target.value});\n      }\n      onStatusChange = (event) => {\n        event.preventDefault();\n        this.setState({status: event.target.value});\n      }\n      \n      onDescriptionChange = (event) => {\n        event.preventDefault();\n        this.setState({description: event.target.value});\n      }\n\n    handleSubmit = e => {\n        const {name,description,status }= this.state;\n        \n        e.preventDefault();\n\n        let todo =  this.saveTodo();\n         console.log(todo)\n        // this.props.addTodo({\n        //     name:name,\n        //     description:description,\n        //     status:status\n        // });    \n        if(todo){\n         console.log(todo._id)   \n            this.props.addTodo(todo);   \n        }\n\n        this.setState({name:'',description:''})\n\n      };\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit} >\n                    {/* <label>Todo Name</label>\n                    <input type=\"text\" ref={this.nameInput}/>\n                    <label>Todo Description</label>\n                    <input type=\"text\" ref={this.descriptionInput} />\n                    {/* <label>Todo Name</label>\n                    <input type=\"text\" ref={this.descriptionInput}/> */}\n\n                    <label>Todo Name</label>\n                    <input type=\"text\" value={this.state.name} onChange={this.onNameChange}/>\n                    <label>Todo Description</label>\n                    <input type=\"text\" value={this.state.description} onChange={this.onDescriptionChange} />\n                    <button onClick={this.handleSubmit}>create todo</button>\n                </form>           \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}