{"ast":null,"code":"var _jsxFileName = \"/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-list/TodoList.jsx\";\nimport React, { Component } from 'react';\nimport TodoForm from '../todo-form/TodoForm';\nimport Todo from '../todo/Todo';\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addTodo = todo => {\n      this.setState(state => ({\n        todoList: [todo, ...state.todoList]\n      }));\n    };\n\n    this.deleteTodo = todo => {\n      const v = this.state.todoList.filter(todo1 => todo1.name !== todo.name);\n      this.setState({\n        todoList: v\n      });\n    };\n\n    this.state = {\n      todoList: []\n    };\n  } // onStatusChange = () =>{\n  //     this.setState({statusClicked: !this.state.statusClicked}, () => console.log(this.state.statusClicked))\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          todoList = _this$state.todoList,\n          statusClicked = _this$state.statusClicked;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), todoList.map(todo => {\n      const name = todo.name,\n            description = todo.description,\n            id = todo.id;\n      return React.createElement(Todo, {\n        key: id,\n        name: name,\n        description: description,\n        deleteTodo: this.deleteTodo //  statusClicked={statusClicked}\n        //  onStatusChange={this.onStatusChange}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-list/TodoList.jsx"],"names":["React","Component","TodoForm","Todo","TodoList","constructor","props","addTodo","todo","setState","state","todoList","deleteTodo","v","filter","todo1","name","render","statusClicked","map","description","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAE5CI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,OAXkB,GAWRC,IAAI,IAAI;AACd,WAAKC,QAAL,CAAcC,KAAK,KAAK;AACpBC,QAAAA,QAAQ,EAAE,CAACH,IAAD,EAAO,GAAGE,KAAK,CAACC,QAAhB;AADU,OAAL,CAAnB;AAGD,KAfe;;AAAA,SAiBlBC,UAjBkB,GAiBJJ,IAAD,IAAU;AACpB,YAAMK,CAAC,GAAG,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,MAApB,CAA2BC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAeR,IAAI,CAACQ,IAAxD,CAAV;AACA,WAAKP,QAAL,CAAc;AAACE,QAAAA,QAAQ,EAAEE;AAAX,OAAd;AAEF,KArBiB;;AAEd,SAAKH,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH,GAP2C,CAS5C;AACA;AACA;;;AAcAM,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKP,KAD9B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACUO,aADV,eACUA,aADV;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKX,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGSI,QAAQ,CAACQ,GAAT,CAAcX,IAAD,IAAU;AAAA,YACbQ,IADa,GACQR,IADR,CACbQ,IADa;AAAA,YACRI,WADQ,GACQZ,IADR,CACRY,WADQ;AAAA,YACIC,EADJ,GACQb,IADR,CACIa,EADJ;AAEvB,aAAS,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,EAAX;AACG,QAAA,IAAI,EAAEL,IADT;AAEG,QAAA,WAAW,EAAEI,WAFhB;AAGG,QAAA,UAAU,EAAE,KAAKR,UAHpB,CAIE;AACA;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AAOC,KATD,CAHT,CADJ;AAiBH;;AA5C2C","sourcesContent":["import React, { Component } from 'react'\nimport TodoForm from '../todo-form/TodoForm';\nimport Todo from '../todo/Todo';\n\nexport default class TodoList extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            todoList: []\n        }\n    }\n\n    // onStatusChange = () =>{\n    //     this.setState({statusClicked: !this.state.statusClicked}, () => console.log(this.state.statusClicked))\n    // }\n\n    addTodo = todo => {\n        this.setState(state => ({\n            todoList: [todo, ...state.todoList]\n        }));\n      };\n\n    deleteTodo = (todo) => {\n       const v = this.state.todoList.filter(todo1 => todo1.name !== todo.name);\n       this.setState({todoList: v});\n\n    }\n\n    render() {\n        const{todoList,statusClicked}=this.state;\n        return (\n            <div>\n                <TodoForm addTodo={this.addTodo}/>\n                {\n                     todoList.map((todo) => {\n                        const {name,description,id}=todo;\n                     return   <Todo key={id}\n                                 name={name} \n                                 description={description} \n                                 deleteTodo={this.deleteTodo} \n                                //  statusClicked={statusClicked}\n                                //  onStatusChange={this.onStatusChange}\n                                 />\n                     })\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}