{"ast":null,"code":"var _jsxFileName = \"/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-list/TodoList.jsx\";\nimport React, { Component } from 'react';\nimport TodoForm from '../todo-form/TodoForm';\nimport Todo from '../todo/Todo';\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onStatusChange = () => {\n      this.setState({\n        statusClicked: !this.state.statusClicked\n      }, () => console.log(this.state.statusClicked));\n    };\n\n    this.addTodo = todo => {\n      this.setState(state => ({\n        todoList: [todo, ...state.todoList]\n      }));\n    };\n\n    this.deleteTodo = todo => {\n      console.log(todo.description);\n      const v = this.state.todoList.filter(todo1 => todo1.name !== todo.name);\n      console.log(v);\n      this.setState({\n        todoList: v\n      }); // console.log(this.state.todoList);\n    };\n\n    this.state = {\n      todoList: [],\n      statusClicked: false\n    };\n  }\n\n  render() {\n    const todoList = this.state.todoList; // console.log(todoList);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), todoList.map(todo => {\n      const name = todo.name,\n            description = todo.description,\n            id = todo.id;\n      return React.createElement(Todo, {\n        key: id,\n        name: name,\n        description: description,\n        deleteTodo: this.deleteTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-list/TodoList.jsx"],"names":["React","Component","TodoForm","Todo","TodoList","constructor","props","onStatusChange","setState","statusClicked","state","console","log","addTodo","todo","todoList","deleteTodo","description","v","filter","todo1","name","render","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAE5CI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,cARkB,GAQD,MAAK;AAClB,WAAKC,QAAL,CAAc;AAACC,QAAAA,aAAa,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAA5B,OAAd,EAA0D,MAAME,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWD,aAAvB,CAAhE;AACH,KAViB;;AAAA,SAYlBI,OAZkB,GAYRC,IAAI,IAAI;AACd,WAAKN,QAAL,CAAcE,KAAK,KAAK;AACpBK,QAAAA,QAAQ,EAAE,CAACD,IAAD,EAAO,GAAGJ,KAAK,CAACK,QAAhB;AADU,OAAL,CAAnB;AAGD,KAhBe;;AAAA,SAkBlBC,UAlBkB,GAkBJF,IAAD,IAAU;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACG,WAAjB;AACD,YAAMC,CAAC,GAAG,KAAKR,KAAL,CAAWK,QAAX,CAAoBI,MAApB,CAA2BC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAeP,IAAI,CAACO,IAAxD,CAAV;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACA,WAAKV,QAAL,CAAc;AAACO,QAAAA,QAAQ,EAAEG;AAAX,OAAd,EAJoB,CAKnB;AAEH,KAzBiB;;AAEd,SAAKR,KAAL,GAAa;AACTK,MAAAA,QAAQ,EAAE,EADD;AAETN,MAAAA,aAAa,EAAE;AAFN,KAAb;AAIH;;AAsBDa,EAAAA,MAAM,GAAG;AAAA,UACCP,QADD,GACW,KAAKL,KADhB,CACCK,QADD,EAEL;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKF,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGSE,QAAQ,CAACQ,GAAT,CAAcT,IAAD,IAAU;AAAA,YACbO,IADa,GACQP,IADR,CACbO,IADa;AAAA,YACRJ,WADQ,GACQH,IADR,CACRG,WADQ;AAAA,YACIO,EADJ,GACQV,IADR,CACIU,EADJ;AAEvB,aAAS,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,EAAX;AAAe,QAAA,IAAI,EAAEH,IAArB;AAA2B,QAAA,WAAW,EAAEJ,WAAxC;AAAqD,QAAA,UAAU,EAAE,KAAKD,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACC,KAHD,CAHT,CADJ;AAWH;;AA5C2C","sourcesContent":["import React, { Component } from 'react'\nimport TodoForm from '../todo-form/TodoForm';\nimport Todo from '../todo/Todo';\n\nexport default class TodoList extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            todoList: [],\n            statusClicked: false\n        }\n    }\n\n    onStatusChange = () =>{\n        this.setState({statusClicked: !this.state.statusClicked}, () => console.log(this.state.statusClicked))\n    }\n\n    addTodo = todo => {\n        this.setState(state => ({\n            todoList: [todo, ...state.todoList]\n        }));\n      };\n\n    deleteTodo = (todo) => {\n        console.log(todo.description)\n       const v = this.state.todoList.filter(todo1 => todo1.name !== todo.name);\n       console.log(v)\n       this.setState({todoList: v});\n        // console.log(this.state.todoList);\n\n    }\n\n\n    render() {\n        const{todoList}=this.state;\n        // console.log(todoList);\n        return (\n            <div>\n                <TodoForm addTodo={this.addTodo}/>\n                {\n                     todoList.map((todo) => {\n                        const {name,description,id}=todo;\n                     return   <Todo key={id} name={name} description={description} deleteTodo={this.deleteTodo} />\n                     })\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}