{"ast":null,"code":"var _jsxFileName = \"/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-list/TodoList.jsx\";\nimport React, { Component } from 'react';\nimport TodoForm from '../todo-form/TodoForm';\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addTodo = todo => {\n      this.setState(state => ({\n        todos: [todo, ...state.todoList]\n      }));\n    };\n\n    this.state = {\n      todoList: []\n    };\n  }\n\n  render() {\n    const todoList = this.state.todoList;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), todoList.map);\n  }\n\n}","map":{"version":3,"sources":["/Users/kevinnmitchell/Desktop/React-TodoList/client/src/todo-list/TodoList.jsx"],"names":["React","Component","TodoForm","TodoList","constructor","props","addTodo","todo","setState","state","todos","todoList","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE5CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,OAPkB,GAORC,IAAI,IAAI;AACd,WAAKC,QAAL,CAAcC,KAAK,KAAK;AACtBC,QAAAA,KAAK,EAAE,CAACH,IAAD,EAAO,GAAGE,KAAK,CAACE,QAAhB;AADe,OAAL,CAAnB;AAGD,KAXe;;AAEd,SAAKF,KAAL,GAAa;AACTE,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAUDC,EAAAA,MAAM,GAAG;AAAA,UACCD,QADD,GACW,KAAKF,KADhB,CACCE,QADD;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKL,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGQK,QAAQ,CAACE,GAHjB,CADJ;AAQH;;AA3B2C","sourcesContent":["import React, { Component } from 'react'\nimport TodoForm from '../todo-form/TodoForm';\n\nexport default class TodoList extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            todoList: []\n        }\n    }\n\n    addTodo = todo => {\n        this.setState(state => ({\n          todos: [todo, ...state.todoList]\n        }));\n      };\n\n\n\n    render() {\n        const{todoList}=this.state;\n        return (\n            <div>\n                <TodoForm addTodo={this.addTodo}/>\n                {\n                    todoList.map\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}